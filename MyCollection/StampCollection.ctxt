#BlueJ class context
comment0.target=StampCollection
comment1.params=
comment1.target=StampCollection()
comment1.text=\r\n\ default\ constructor\r\n
comment10.params=
comment10.target=int\ getSize()
comment10.text=\r\n\ gets\ the\ size\ of\ the\ LinkedList\r\n\ @returns\ stamps.size()\ -\ the\ length\ of\ the\ LinkedList\r\n
comment11.params=id
comment11.target=int\ getStampIndex(int)
comment11.text=\r\n\ returns\ the\ index\ of\ the\ stamp\ with\ the\ id\ entered\r\n\ @pram\ id\ -\ the\ id\ to\ search\ for\ in\ the\ list\r\n\ @return\ index\ -\ the\ list\ index\ of\ the\ item\ with\ the\ entered\ id\r\n
comment12.params=
comment12.target=java.lang.String\ toString()
comment12.text=\r\n\ this\ method\ returns\ a\ string\ of\ the\ whole\ collection\r\n\ overides\ toString()\ method\r\n\ @return\ myColection\ -\ the\ string\ representing\ the\ whole\ collection\r\n
comment2.params=populate
comment2.target=StampCollection(int)
comment2.text=\r\n\ this\ constructor\ populates\ the\ list\ with\ a\ number\ \r\n\ of\ elements\ with\ random\ ids\ and\ seprate\ names\r\n\ it\ also\ sets\ default\ values\ for\ variables\r\n\ @pram\ pop\ -\ how\ many\ test\ elements\ should\ be\ populated\r\n
comment3.params=
comment3.target=void\ displayList()
comment3.text=\r\n\ this\ method\ displays\ the\ collection\ list\r\n
comment4.params=index
comment4.target=void\ displayItem(int)
comment4.text=\r\n\ this\ method\ displays\ an\ Item\ from\ the\ collection\ list\r\n\ @pram\ index\ -\ the\ index\ of\ the\ item\ to\ display\r\n
comment5.params=in
comment5.target=void\ addStamp(java.util.Scanner)
comment5.text=\r\n\ this\ method\ is\ prompts\ the\ user\ to\ enter\ the\ information\ to\r\n\ create\ a\ new\ stamp\ object\ then\ creates\ a\ new\ stamp\ object\r\n\ @pram\ in\ -\ scanner\ object\ pass\ through\r\n\ @throws\ Exception\ -\ if\ id\ grater\ than\ 999\ or\ if\ id\ under\ 1,\ and\ if\ id\ is\ already\ used.\r\n\ also\ throws\ exception\ if\ entered\ name\ is\ empty\ or\ rarity\ char\ is\ not\ valid.\ \r\n
comment6.params=in\ id
comment6.target=void\ changeStamp(java.util.Scanner,\ int)
comment6.text=\r\n\ this\ method\ displays\ the\ selected\ item\ that\ the\ user\ wants\ to\ change,\ then\ it\ prompts\ the\ user\ for\ which\r\n\ item\ variable\ they\ want\ to\ change\ and\ allows\ the\ user\ to\ change\ it.\ the\ loop\ breaks\ when\ user\r\n\ enters\ correct\ input.\r\n\ @pram\ in\ -\ scanner\ object\ pass\ through\r\n\ @pram\ id\ -\ the\ id\ of\ the\ seleted\ item\ that\ the\ user\ wants\ to\ change.\r\n\ @throws\ Exception\ -\ if\ id\ is\ not\ already\ in\ use\ or\ if\ name\ entered\ is\ empty\r\n
comment7.params=in\ id
comment7.target=void\ removeStamp(java.util.Scanner,\ int)
comment7.text=\r\n\ this\ method\ displays\ the\ stamp\ that\ the\ user\ has\ indicated\ that\ they\ want\ to\ \r\n\ remove\ and\ asks\ for\ conformation\ before\ removing\ the\ selected\ stamp\ from\ the\ list.\r\n\ @pram\ in\ -\ Scanner\ object\ pass\ through\r\n\ @pram\ id\ -\ the\ id\ of\ the\ seleted\ item\ that\ the\ user\ wants\ to\ remove.\r\n\ @throws\ Exception\ -\ when\ object\ with\ entered\ id\ is\ not\ in\ list\r\n
comment8.params=
comment8.target=void\ sortList()
comment8.text=\r\n\ this\ method\ executes\ a\ sort\ on\ the\ LinkedList\ using\ the\ Collections.sort()\r\n
comment9.params=howMany
comment9.target=void\ populateRand(int)
comment9.text=\r\n\ populates\ the\ LinkedList\ with\ a\ number\ of\ test\ elements\r\n\ with\ random\ ids\ and\ diffrent\ sequential\ names\r\n\ @pram\ howMany\ -\ how\ many\ stamp\ objcets\ should\ the\ method\ populate\ the\ list\ with\r\n
numComments=13
